{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\web_project_01\\\\Frontend\\\\web_project\\\\src\\\\Component\\\\Common\\\\RegistrationForm.jsx\",\n  _s = $RefreshSig$();\n// RegistrationForm.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegistrationForm = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Form state\n  const [formData, setFormData] = useState({\n    fullName: '',\n    nickName: '',\n    dob: '',\n    gender: '',\n    address: '',\n    telephone: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    otp: '',\n    otpEmail: '' // new field to store email for OTP verification\n  });\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [otpCountdown, setOtpCountdown] = useState(120); // 2 minutes\n\n  useEffect(() => {\n    let timer;\n    if (isOtpSent && otpCountdown > 0) {\n      timer = setTimeout(() => {\n        setOtpCountdown(prevCountdown => prevCountdown - 1);\n      }, 1000);\n    } else if (otpCountdown === 0) {\n      // Handle expiration or resend OTP logic here\n      console.log('OTP expired. Resend if needed.');\n    }\n    return () => clearTimeout(timer);\n  }, [isOtpSent, otpCountdown]);\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Additional form validation logic here\n\n    // If the form is valid, send OTP\n    if (isEmailValid()) {\n      sendOtp();\n    } else {\n      toast.error('Invalid email for OTP');\n    }\n  };\n\n  // Check if email is valid for OTP\n  const isEmailValid = () => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(formData.email);\n  };\n\n  // Send OTP logic\n  const sendOtp = async () => {\n    try {\n      // Send a request to the backend to generate and send OTP\n      // You need to implement this API endpoint in your Spring Boot backend\n      const response = await fetch('/api/send-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: formData.email\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setIsOtpSent(true);\n        toast.success('OTP sent successfully');\n      } else {\n        // Handle error, show pop-up, etc.\n        console.error(data.message);\n        toast.error('Error sending OTP');\n      }\n    } catch (error) {\n      console.error('Error sending OTP:', error);\n    }\n  };\n\n  // Handle OTP verification\n  const handleOtpVerification = async () => {\n    try {\n      // Check if the email in the form matches the email used for OTP verification\n      if (formData.email !== formData.otpEmail) {\n        // Show an error or handle the mismatch as needed\n        console.error('Email mismatch for OTP verification');\n        toast.error('Email mismatch for OTP verification');\n        return;\n      }\n\n      // Send a request to the backend to verify OTP\n      // You need to implement this API endpoint in your Spring Boot backend\n      const response = await fetch('/api/verify-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: formData.email,\n          otp: formData.otp\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Registration successful, navigate to success page\n        navigate('/success');\n      } else {\n        // Handle OTP verification failure, show pop-up, etc.\n        console.error(data.message);\n        toast.error('Error verifying OTP');\n      }\n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registration Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: isOtpSent ? handleOtpVerification : handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Full Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"fullName\",\n          value: formData.fullName,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Nickname\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"nickName\",\n          value: formData.nickName,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date of Birth (YYYY-MM-DD)\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"dob\",\n          value: formData.dob,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Gender\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"gender\",\n          value: formData.gender,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Address\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"address\",\n          value: formData.address,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Telephone (10 digits, starts with 0)\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"telephone\",\n          pattern: \"[0-9]{10}\",\n          value: formData.telephone,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Confirm Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: formData.confirmPassword,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), isOtpSent && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Enter OTP\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"otp\",\n            value: formData.otp,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Resend OTP in \", Math.floor(otpCountdown / 60), \":\", otpCountdown % 60, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isOtpSent ? 'Verify OTP' : 'Send OTP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationForm, \"A3GaRiqAG/XLRSz5vCCh2bB/TtU=\", false, function () {\n  return [useNavigate];\n});\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","RegistrationForm","_s","navigate","formData","setFormData","fullName","nickName","dob","gender","address","telephone","email","password","confirmPassword","otp","otpEmail","isOtpSent","setIsOtpSent","otpCountdown","setOtpCountdown","timer","setTimeout","prevCountdown","console","log","clearTimeout","handleInputChange","e","name","value","target","prevData","handleSubmit","preventDefault","isEmailValid","sendOtp","error","emailRegex","test","response","fetch","method","headers","body","JSON","stringify","data","json","ok","success","message","handleOtpVerification","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","pattern","Math","floor","_c","$RefreshReg$"],"sources":["D:/projects/web_project_01/Frontend/web_project/src/Component/Common/RegistrationForm.jsx"],"sourcesContent":["// RegistrationForm.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst RegistrationForm = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // Form state\r\n  const [formData, setFormData] = useState({\r\n    fullName: '',\r\n    nickName: '',\r\n    dob: '',\r\n    gender: '',\r\n    address: '',\r\n    telephone: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    otp: '',\r\n    otpEmail: '', // new field to store email for OTP verification\r\n  });\r\n\r\n  const [isOtpSent, setIsOtpSent] = useState(false);\r\n  const [otpCountdown, setOtpCountdown] = useState(120); // 2 minutes\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isOtpSent && otpCountdown > 0) {\r\n      timer = setTimeout(() => {\r\n        setOtpCountdown((prevCountdown) => prevCountdown - 1);\r\n      }, 1000);\r\n    } else if (otpCountdown === 0) {\r\n      // Handle expiration or resend OTP logic here\r\n      console.log('OTP expired. Resend if needed.');\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [isOtpSent, otpCountdown]);\r\n\r\n  // Handle form input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Additional form validation logic here\r\n\r\n    // If the form is valid, send OTP\r\n    if (isEmailValid()) {\r\n      sendOtp();\r\n    } else {\r\n      toast.error('Invalid email for OTP');\r\n    }\r\n  };\r\n\r\n  // Check if email is valid for OTP\r\n  const isEmailValid = () => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(formData.email);\r\n  };\r\n\r\n  // Send OTP logic\r\n  const sendOtp = async () => {\r\n    try {\r\n      // Send a request to the backend to generate and send OTP\r\n      // You need to implement this API endpoint in your Spring Boot backend\r\n      const response = await fetch('/api/send-otp', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email: formData.email }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setIsOtpSent(true);\r\n        toast.success('OTP sent successfully');\r\n      } else {\r\n        // Handle error, show pop-up, etc.\r\n        console.error(data.message);\r\n        toast.error('Error sending OTP');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending OTP:', error);\r\n    }\r\n  };\r\n\r\n  // Handle OTP verification\r\n  const handleOtpVerification = async () => {\r\n    try {\r\n      // Check if the email in the form matches the email used for OTP verification\r\n      if (formData.email !== formData.otpEmail) {\r\n        // Show an error or handle the mismatch as needed\r\n        console.error('Email mismatch for OTP verification');\r\n        toast.error('Email mismatch for OTP verification');\r\n        return;\r\n      }\r\n\r\n      // Send a request to the backend to verify OTP\r\n      // You need to implement this API endpoint in your Spring Boot backend\r\n      const response = await fetch('/api/verify-otp', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          email: formData.email,\r\n          otp: formData.otp,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Registration successful, navigate to success page\r\n        navigate('/success');\r\n      } else {\r\n        // Handle OTP verification failure, show pop-up, etc.\r\n        console.error(data.message);\r\n        toast.error('Error verifying OTP');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error verifying OTP:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Registration Form</h1>\r\n      <form onSubmit={isOtpSent ? handleOtpVerification : handleSubmit}>\r\n        <label>\r\n          Full Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"fullName\"\r\n            value={formData.fullName}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Nickname\r\n          <input\r\n            type=\"text\"\r\n            name=\"nickName\"\r\n            value={formData.nickName}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Date of Birth (YYYY-MM-DD)\r\n          <input\r\n            type=\"text\"\r\n            name=\"dob\"\r\n            value={formData.dob}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Gender\r\n          <input\r\n            type=\"text\"\r\n            name=\"gender\"\r\n            value={formData.gender}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Address\r\n          <input\r\n            type=\"text\"\r\n            name=\"address\"\r\n            value={formData.address}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Telephone (10 digits, starts with 0)\r\n          <input\r\n            type=\"tel\"\r\n            name=\"telephone\"\r\n            pattern=\"[0-9]{10}\"\r\n            value={formData.telephone}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Confirm Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        {isOtpSent && (\r\n          <>\r\n            <label>\r\n              Enter OTP\r\n              <input\r\n                type=\"text\"\r\n                name=\"otp\"\r\n                value={formData.otp}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </label>\r\n\r\n            <p>\r\n              Resend OTP in {Math.floor(otpCountdown / 60)}:{otpCountdown % 60} seconds\r\n            </p>\r\n          </>\r\n        )}\r\n\r\n        <button type=\"submit\">\r\n          {isOtpSent ? 'Verify OTP' : 'Send OTP'}\r\n        </button>\r\n\r\n        <ToastContainer />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IACvCc,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,GAAG,EAAE,EAAE;IACPC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE,EAAE;IACnBC,GAAG,EAAE,EAAE;IACPC,QAAQ,EAAE,EAAE,CAAE;EAChB,CAAC,CAAC;EAEF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC2B,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;EAEvDC,SAAS,CAAC,MAAM;IACd,IAAI4B,KAAK;IACT,IAAIJ,SAAS,IAAIE,YAAY,GAAG,CAAC,EAAE;MACjCE,KAAK,GAAGC,UAAU,CAAC,MAAM;QACvBF,eAAe,CAAEG,aAAa,IAAKA,aAAa,GAAG,CAAC,CAAC;MACvD,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM,IAAIJ,YAAY,KAAK,CAAC,EAAE;MAC7B;MACAK,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C;IACA,OAAO,MAAMC,YAAY,CAACL,KAAK,CAAC;EAClC,CAAC,EAAE,CAACJ,SAAS,EAAEE,YAAY,CAAC,CAAC;;EAE7B;EACA,MAAMQ,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC1B,WAAW,CAAE2B,QAAQ,KAAM;MAAE,GAAGA,QAAQ;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EAC7D,CAAC;;EAED;EACA,MAAMG,YAAY,GAAIL,CAAC,IAAK;IAC1BA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB;;IAEA;IACA,IAAIC,YAAY,CAAC,CAAC,EAAE;MAClBC,OAAO,CAAC,CAAC;IACX,CAAC,MAAM;MACLxC,KAAK,CAACyC,KAAK,CAAC,uBAAuB,CAAC;IACtC;EACF,CAAC;;EAED;EACA,MAAMF,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMG,UAAU,GAAG,4BAA4B;IAC/C,OAAOA,UAAU,CAACC,IAAI,CAACnC,QAAQ,CAACQ,KAAK,CAAC;EACxC,CAAC;;EAED;EACA,MAAMwB,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF;MACA;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;QAC5CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAElC,KAAK,EAAER,QAAQ,CAACQ;QAAM,CAAC;MAChD,CAAC,CAAC;MAEF,MAAMmC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACf/B,YAAY,CAAC,IAAI,CAAC;QAClBtB,KAAK,CAACsD,OAAO,CAAC,uBAAuB,CAAC;MACxC,CAAC,MAAM;QACL;QACA1B,OAAO,CAACa,KAAK,CAACU,IAAI,CAACI,OAAO,CAAC;QAC3BvD,KAAK,CAACyC,KAAK,CAAC,mBAAmB,CAAC;MAClC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdb,OAAO,CAACa,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;;EAED;EACA,MAAMe,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF;MACA,IAAIhD,QAAQ,CAACQ,KAAK,KAAKR,QAAQ,CAACY,QAAQ,EAAE;QACxC;QACAQ,OAAO,CAACa,KAAK,CAAC,qCAAqC,CAAC;QACpDzC,KAAK,CAACyC,KAAK,CAAC,qCAAqC,CAAC;QAClD;MACF;;MAEA;MACA;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;QAC9CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBlC,KAAK,EAAER,QAAQ,CAACQ,KAAK;UACrBG,GAAG,EAAEX,QAAQ,CAACW;QAChB,CAAC;MACH,CAAC,CAAC;MAEF,MAAMgC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACf;QACA9C,QAAQ,CAAC,UAAU,CAAC;MACtB,CAAC,MAAM;QACL;QACAqB,OAAO,CAACa,KAAK,CAACU,IAAI,CAACI,OAAO,CAAC;QAC3BvD,KAAK,CAACyC,KAAK,CAAC,qBAAqB,CAAC;MACpC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdb,OAAO,CAACa,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEvC,OAAA;IAAAuD,QAAA,gBACEvD,OAAA;MAAAuD,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B3D,OAAA;MAAM4D,QAAQ,EAAEzC,SAAS,GAAGmC,qBAAqB,GAAGnB,YAAa;MAAAoB,QAAA,gBAC/DvD,OAAA;QAAAuD,QAAA,GAAO,WAEL,eAAAvD,OAAA;UACE6D,IAAI,EAAC,MAAM;UACX9B,IAAI,EAAC,UAAU;UACfC,KAAK,EAAE1B,QAAQ,CAACE,QAAS;UACzBsD,QAAQ,EAAEjC,iBAAkB;UAC5BkC,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAER3D,OAAA;QAAAuD,QAAA,GAAO,UAEL,eAAAvD,OAAA;UACE6D,IAAI,EAAC,MAAM;UACX9B,IAAI,EAAC,UAAU;UACfC,KAAK,EAAE1B,QAAQ,CAACG,QAAS;UACzBqD,QAAQ,EAAEjC,iBAAkB;UAC5BkC,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAER3D,OAAA;QAAAuD,QAAA,GAAO,4BAEL,eAAAvD,OAAA;UACE6D,IAAI,EAAC,MAAM;UACX9B,IAAI,EAAC,KAAK;UACVC,KAAK,EAAE1B,QAAQ,CAACI,GAAI;UACpBoD,QAAQ,EAAEjC,iBAAkB;UAC5BkC,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAER3D,OAAA;QAAAuD,QAAA,GAAO,QAEL,eAAAvD,OAAA;UACE6D,IAAI,EAAC,MAAM;UACX9B,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAE1B,QAAQ,CAACK,MAAO;UACvBmD,QAAQ,EAAEjC,iBAAkB;UAC5BkC,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAER3D,OAAA;QAAAuD,QAAA,GAAO,SAEL,eAAAvD,OAAA;UACE6D,IAAI,EAAC,MAAM;UACX9B,IAAI,EAAC,SAAS;UACdC,KAAK,EAAE1B,QAAQ,CAACM,OAAQ;UACxBkD,QAAQ,EAAEjC,iBAAkB;UAC5BkC,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAER3D,OAAA;QAAAuD,QAAA,GAAO,sCAEL,eAAAvD,OAAA;UACE6D,IAAI,EAAC,KAAK;UACV9B,IAAI,EAAC,WAAW;UAChBiC,OAAO,EAAC,WAAW;UACnBhC,KAAK,EAAE1B,QAAQ,CAACO,SAAU;UAC1BiD,QAAQ,EAAEjC,iBAAkB;UAC5BkC,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAER3D,OAAA;QAAAuD,QAAA,GAAO,OAEL,eAAAvD,OAAA;UACE6D,IAAI,EAAC,OAAO;UACZ9B,IAAI,EAAC,OAAO;UACZC,KAAK,EAAE1B,QAAQ,CAACQ,KAAM;UACtBgD,QAAQ,EAAEjC,iBAAkB;UAC5BkC,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAER3D,OAAA;QAAAuD,QAAA,GAAO,UAEL,eAAAvD,OAAA;UACE6D,IAAI,EAAC,UAAU;UACf9B,IAAI,EAAC,UAAU;UACfC,KAAK,EAAE1B,QAAQ,CAACS,QAAS;UACzB+C,QAAQ,EAAEjC,iBAAkB;UAC5BkC,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAER3D,OAAA;QAAAuD,QAAA,GAAO,kBAEL,eAAAvD,OAAA;UACE6D,IAAI,EAAC,UAAU;UACf9B,IAAI,EAAC,iBAAiB;UACtBC,KAAK,EAAE1B,QAAQ,CAACU,eAAgB;UAChC8C,QAAQ,EAAEjC,iBAAkB;UAC5BkC,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,EAEPxC,SAAS,iBACRnB,OAAA,CAAAE,SAAA;QAAAqD,QAAA,gBACEvD,OAAA;UAAAuD,QAAA,GAAO,WAEL,eAAAvD,OAAA;YACE6D,IAAI,EAAC,MAAM;YACX9B,IAAI,EAAC,KAAK;YACVC,KAAK,EAAE1B,QAAQ,CAACW,GAAI;YACpB6C,QAAQ,EAAEjC,iBAAkB;YAC5BkC,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eAER3D,OAAA;UAAAuD,QAAA,GAAG,gBACa,EAACU,IAAI,CAACC,KAAK,CAAC7C,YAAY,GAAG,EAAE,CAAC,EAAC,GAAC,EAACA,YAAY,GAAG,EAAE,EAAC,UACnE;QAAA;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,eACJ,CACH,eAED3D,OAAA;QAAQ6D,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAClBpC,SAAS,GAAG,YAAY,GAAG;MAAU;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eAET3D,OAAA,CAACH,cAAc;QAAA2D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACvD,EAAA,CAjQID,gBAAgB;EAAA,QACHP,WAAW;AAAA;AAAAuE,EAAA,GADxBhE,gBAAgB;AAmQtB,eAAeA,gBAAgB;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}