{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\web_project_01\\\\Frontend\\\\web_project\\\\src\\\\Component\\\\Common\\\\RegistrationForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    FullName: '',\n    NickName: '',\n    dob: '',\n    gender: '',\n    address: '',\n    telephone: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [showOtpModal, setShowOtpModal] = useState(false);\n  const [otp, setOtp] = useState('');\n  const [verificationSuccess, setVerificationSuccess] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleOtpChange = e => {\n    setOtp(e.target.value);\n  };\n  const handleVerifyOtp = () => {\n    // Here you can make an API call to your Spring Boot backend\n    // to verify the OTP. For now, let's assume verification is successful.\n    setVerificationSuccess(true);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Validation logic\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const telephoneRegex = /^0[0-9]{9}$/;\n    if (!emailRegex.test(formData.email)) {\n      alert('Invalid email format');\n      return;\n    }\n    if (!telephoneRegex.test(formData.telephone)) {\n      alert('Invalid telephone number format');\n      return;\n    }\n    if (formData.password !== formData.confirmPassword) {\n      alert('Passwords do not match');\n      return;\n    }\n\n    // If all validations pass, proceed with OTP verification\n    setShowOtpModal(true);\n  };\n  const handleOtpSubmit = () => {\n    // Here you can make an API call to your Spring Boot backend\n    // to submit the registration data. For now, let's assume successful submission.\n    setShowOtpModal(false);\n    alert('Registration successful!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showOtpModal,\n      onHide: () => setShowOtpModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Email Verification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"An OTP has been sent to your email address. Please enter the OTP below to verify your account.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formOtp\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter OTP\",\n            value: otp,\n            onChange: handleOtpChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowOtpModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleVerifyOtp,\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: verificationSuccess,\n      onHide: () => setVerificationSuccess(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Registration Successful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your account has been successfully registered!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleOtpSubmit,\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationForm, \"nhiXAPVuP+0Ie++kOgG0QaLmcKE=\");\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","Form","Button","Modal","jsxDEV","_jsxDEV","RegistrationForm","_s","formData","setFormData","FullName","NickName","dob","gender","address","telephone","email","password","confirmPassword","showOtpModal","setShowOtpModal","otp","setOtp","verificationSuccess","setVerificationSuccess","handleChange","e","name","value","target","handleOtpChange","handleVerifyOtp","handleSubmit","preventDefault","emailRegex","telephoneRegex","test","alert","handleOtpSubmit","children","onSubmit","variant","type","fileName","_jsxFileName","lineNumber","columnNumber","show","onHide","Header","closeButton","Title","Body","Group","controlId","Label","Control","placeholder","onChange","required","Footer","onClick","_c","$RefreshReg$"],"sources":["D:/projects/web_project_01/Frontend/web_project/src/Component/Common/RegistrationForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Modal } from 'react-bootstrap';\r\n\r\nconst RegistrationForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    FullName: '',\r\n    NickName: '',\r\n    dob: '',\r\n    gender: '',\r\n    address: '',\r\n    telephone: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n\r\n  const [showOtpModal, setShowOtpModal] = useState(false);\r\n  const [otp, setOtp] = useState('');\r\n  const [verificationSuccess, setVerificationSuccess] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleOtpChange = (e) => {\r\n    setOtp(e.target.value);\r\n  };\r\n\r\n  const handleVerifyOtp = () => {\r\n    // Here you can make an API call to your Spring Boot backend\r\n    // to verify the OTP. For now, let's assume verification is successful.\r\n    setVerificationSuccess(true);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validation logic\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const telephoneRegex = /^0[0-9]{9}$/;\r\n\r\n    if (!emailRegex.test(formData.email)) {\r\n      alert('Invalid email format');\r\n      return;\r\n    }\r\n\r\n    if (!telephoneRegex.test(formData.telephone)) {\r\n      alert('Invalid telephone number format');\r\n      return;\r\n    }\r\n\r\n    if (formData.password !== formData.confirmPassword) {\r\n      alert('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    // If all validations pass, proceed with OTP verification\r\n    setShowOtpModal(true);\r\n  };\r\n\r\n  const handleOtpSubmit = () => {\r\n    // Here you can make an API call to your Spring Boot backend\r\n    // to submit the registration data. For now, let's assume successful submission.\r\n    setShowOtpModal(false);\r\n    alert('Registration successful!');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSubmit}>\r\n        {/* ... (same as previous code) */}\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n\r\n      {/* OTP Verification Modal */}\r\n      <Modal show={showOtpModal} onHide={() => setShowOtpModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Email Verification</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>\r\n            An OTP has been sent to your email address. Please enter the OTP below to verify your account.\r\n          </p>\r\n          <Form.Group controlId=\"formOtp\">\r\n            <Form.Label>Enter OTP</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter OTP\"\r\n              value={otp}\r\n              onChange={handleOtpChange}\r\n              required\r\n            />\r\n          </Form.Group>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowOtpModal(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleVerifyOtp}>\r\n            Verify OTP\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Success Modal */}\r\n      <Modal show={verificationSuccess} onHide={() => setVerificationSuccess(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Registration Successful</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Your account has been successfully registered!</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={handleOtpSubmit}>\r\n            Continue\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}